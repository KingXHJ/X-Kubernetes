apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-server-http-xingress
  namespace: argocd
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    # kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: argocd-server
            port:
              name: http
    host: argocd.xingress.kingxhj.eu.org
  tls:
  - hosts:
    - argocd.xingress.kingxhj.eu.org
    secretName: argocd-xingress-le-http

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-server-grpc-xingress
  namespace: argocd
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    # kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: argocd-server
            port:
              name: https
    host: grpc.argocd.xingress.kingxhj.eu.org
  tls:
  - hosts:
    - grpc.argocd.xingress.kingxhj.eu.org
    secretName: argocd-xingress-le-grpc

# kubectl delete secret argocd-xingress-le-grpc -n argocd
# kubectl delete secret argocd-xingress-le-http -n argocd